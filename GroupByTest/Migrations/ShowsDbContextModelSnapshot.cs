// <auto-generated />
using System;
using GroupByTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroupByTest.Migrations
{
    [DbContext(typeof(ShowsDbContext))]
    partial class ShowsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroupByTest.FollowShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Followed");

                    b.Property<int>("ShowId");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("FollowShows");

                    b.HasData(
                        new { Id = 1, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 526, DateTimeKind.Local), ShowId = 1 },
                        new { Id = 2, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 1 },
                        new { Id = 3, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 1 },
                        new { Id = 4, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 1 },
                        new { Id = 5, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 1 },
                        new { Id = 6, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 2 },
                        new { Id = 7, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 2 },
                        new { Id = 8, Followed = new DateTime(2018, 6, 17, 22, 3, 23, 527, DateTimeKind.Local), ShowId = 2 }
                    );
                });

            modelBuilder.Entity("GroupByTest.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Shows");

                    b.HasData(
                        new { Id = 1, Name = "Friends" },
                        new { Id = 2, Name = "Game of Thrones" }
                    );
                });

            modelBuilder.Entity("GroupByTest.FollowShow", b =>
                {
                    b.HasOne("GroupByTest.Show", "Show")
                        .WithMany("Followers")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
